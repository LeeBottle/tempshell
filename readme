해결한 부분 (Implemented Features)
프롬프트 표시: main.c의 readline("minishell$ ");를 통해 새로운 명령어 입력을 기다리는 프롬프트를 표시합니다.

히스토리 기능: main.c에서 add_history(input);을 사용하여 셸에 작업 히스토리 기능이 있습니다.

따옴표 처리:

닫히지 않은 따옴표: parsing/split_word_append.c에서 닫는 따옴표를 찾지 못하면 문자열 끝까지 읽어 처리합니다.

작은따옴표 (''): parsing/split_word_append.c의 single_quote 함수를 통해 작은따옴표 안의 메타문자를 해석하지 않고 문자 그대로 처리합니다.

큰따옴표 (""): parsing/split_word_append.c의 double_quote 함수를 통해 큰따옴표 안의 $를 제외한 메타문자는 해석하지 않습니다.

환경 변수 처리:

$와 $? 확장: parsing/split_word_append2.c의 get_expanded_value 함수가 $로 시작하는 환경 변수를 값으로 확장하며, $?는 가장 최근에 실행된 포그라운드 파이프라인의 종료 상태로 확장합니다.

시그널 처리:

signal/init_signal.c 파일에서 시그널을 처리합니다.

ctrl-C: 새로운 줄에 새로운 프롬프트를 출력합니다.

ctrl-D: "exit"을 출력하고 셸을 종료합니다. (main.c에서 처리)

**ctrl-**: 아무런 동작도 하지 않습니다. (SIG_IGN으로 무시)

전역 변수: main.c의 volatile sig_atomic_t shell_sig 단 하나의 전역 변수만 사용합니다. 이는 시그널 핸들러(sigint_handler)가 비동기적으로 변수를 수정할 때 발생할 수 있는 문제를 피하기 위해 volatile sig_atomic_t 타입으로 선언하여 안전하게 접근하기 위함입니다.

내장 기능 (Built-ins):

echo: -n 옵션을 포함하여 구현되었습니다. (builtin_func/builtin_echo.c)

cd: 상대 또는 절대 경로를 처리하며, 인자가 없을 경우 HOME 디렉토리로 이동합니다. (builtin_func/builtin_cd.c)

env: 옵션이나 인자 없이 환경 변수를 출력합니다. (builtin_func/builtin_env.c)




────────────────────────────────────────────────────────────────────────




해결 못한 부분 (Unimplemented Features)
실행 파일 처리: PATH 변수를 기반으로 하거나 상대/절대 경로를 사용하여 실행 파일을 찾아 실행하는 기능이 구현되지 않았습니다. execute/execute.c는 내장 명령어만 처리합니다.

리다이렉션 (<, >, <<, >>): 입출력 리다이렉션을 위한 파싱은 parsing/split_redirection.c에서 이루어지지만, execute/execute.c에서 실제로 리다이렉션을 수행하는 로직이 없습니다.

파이프 (|): 파이프 문자에 대한 파싱은 parsing/split_pipe.c에서 이루어지지만, 명령어의 출력을 다른 명령어의 입력으로 연결하는 실행 로직이 구현되지 않았습니다.

내장 기능 (Built-ins):

pwd: builtin_func/builtin_pwd.c에 함수가 비어있습니다.

export: builtin_func/builtin_export.c에 함수가 비어있습니다.

unset: builtin_func/builtin_unset.c에 함수가 비어있습니다.

exit: builtin_func/builtin_exit.c에 함수가 비어있습니다.

메모리 누수: readline() 함수 자체의 메모리 누수는 과제 요구사항에 따라 수정하지 않았으나, 직접 작성한 코드의 메모리 누수 여부는 추가적인 검증이 필요합니다. (예: ft_echo 내 ft_strjoin의 반복적인 사용)


────────────────────────────────────────────────────────────────────────
수정사항